---
version: "3"

dotenv: [".env", "{{.HOME}}/.env"]

vars:
  DO_PAT: '{{.DO_PAT | default ""}}'
  DO_SSH_KEY_NAME: '{{.DO_SSH_KEY_NAME | default "" }}'
  DO_DOMAIN_NAME: '{{.DO_DOMAIN_NAME | default "lxx.quest"}}'
  DOMAIN_NAME: "{{.DOMAIN_NAME | default .DO_DOMAIN_NAME}}"
  ACCOUNT_EMAIL: '{{.ACCOUNT_EMAIL | default "admin@lxx.quest" }}'
  DROPLET_SIZE: '{{.DROPLET_SIZE | default "s-1vcpu-1gb"}}'
  DROPLET_NAME: '{{.DROPLET_NAME | default "lxx-01"}}'
  DO_REGION: '{{.DO_REGION | default "fra1"}}'
  DB_CLUSTER_NAME: '{{.DB_CLUSTER_NAME | default "lxx-cluster"}}'
  DB_CLUSTER_SIZE: '{{.DB_CLUSTER_SIZE | default "db-s-1vcpu-1gb" }}'
  PRIVATE_KEY_FILE:
    sh: echo "$HOME/.ssh/id_rsa"

tasks:
  debug:
    cmds:
      - echo {{.DOMAIN_NAME}}
      - echo {{.DO_DOMAIN_NAME}}
  init:
    dir: tf/
    cmds:
      - terraform init

  plan:
    dir: tf/
    cmds:
      - mkdir -p .plans/
      - |
        terraform plan \
          -var "do_token={{.DO_PAT}}" \
          -var "domain_name={{.DO_DOMAIN_NAME}}" \
          -var "domain={{.DOMAIN_NAME}}" \
          -var "account_email={{.ACCOUNT_EMAIL}}" \
          -var "ssh_key_name={{.DO_SSH_KEY_NAME}}" \
          -var "ssh_private_key={{.PRIVATE_KEY_FILE}} " \
          -var "droplet_size={{.DROPLET_SIZE}}" \
          -var "droplet_name={{.DROPLET_NAME}}" \
          -var "db_cluster_size={{.DB_CLUSTER_SIZE}}" \
          -var "db_cluster_name={{.DB_CLUSTER_NAME}}" \
          -var "region={{.DO_REGION}}" \
          -out .plans/deploy

  destroy:
    dir: tf/
    cmds:
      - |
        terraform apply -destroy \
          -auto-approve \
          -var "do_token={{.DO_PAT}}" \
          -var "domain_name={{.DO_DOMAIN_NAME}}" \
          -var "domain={{.DOMAIN_NAME}}" \
          -var "account_email={{.ACCOUNT_EMAIL}}" \
          -var "ssh_key_name={{.DO_SSH_KEY_NAME}}" \
          -var "ssh_private_key={{.PRIVATE_KEY_FILE}} " \
          -var "droplet_size={{.DROPLET_SIZE}}" \
          -var "droplet_name={{.DROPLET_NAME}}" \
          -var "db_cluster_size={{.DB_CLUSTER_SIZE}}" \
          -var "db_cluster_name={{.DB_CLUSTER_NAME}}" \
          -var "region={{.DO_REGION}}"

  apply:
    dir: tf/
    cmds:
      - terraform apply .plans/deploy

  show-droplet:
    dir: tf/
    cmds:
      - terraform state show 'digitalocean_droplet.lxx-droplet'

  show-ip:
    cmds:
      - echo "{{.ipv4}}"
    vars:
      ipv4:
        sh: task show-droplet | grep ipv4 | cut -d '"' -f2 | head -n 1

  clean:
    dir: tf/
    cmds:
      - rm -Rf .plans/
      - rm -Rf .terraform/
      - rm -f terraform.tfstate terraform.tfstate.backup

  doc:
    cmds:
      - terraform-docs markdown tf > tf/README.md

  reset:
    cmds:
      - task: destroy
      - task: plan
      - task: apply

  ssh:
    cmds:
      - ssh lxx@{{.target}}
    vars:
      target:
        sh: task show-ip
    interactive: true

  watch-cloud-init:
    cmds:
      - ssh root@{{.target}} tail -f /var/log/cloud-init-output.log
    vars:
      target:
        sh: task show-ip
    interactive: true

  check-cert:
    cmds:
      - curl --resolve traefik.{{.DOMAIN_NAME}}:443:{{.target}} -iIv https://traefik.lxx.quest/dashboard/#/ 2>&1 | awk 'BEGIN { cert=0 } /^\* SSL connection/ { cert=1 } /^\*/ { if (cert) print }'
    vars:
      target:
        sh: task show-ip

  tunnel-jupyter:
    cmds:
      - ssh -N -L 8888:localhost:10080 lxx@{{.target}}
    vars:
      target:
        sh: task show-ip

  code:
    cmds:
      - code --folder-uri vscode-remote://ssh-remote+lxx@{{.target}}/home/lxx
    vars:
      target:
        sh: task show-ip
